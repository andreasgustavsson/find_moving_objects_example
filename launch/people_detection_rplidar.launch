<?xml version="1.0" encoding="utf-8"?>
<launch>

<!--  Rviz coordinate system: x=red, y=green, z=blue  -->
<!--  roscore is automatically started if roslaunch detects that it is not already running  -->
  
<!--   <param name="use_sim_time" value="true"/>  -->

  <env name="ROSCONSOLE_CONFIG_FILE"
       value="$(find unicorn_sensor_interpreter)/logger_config/logger_config_rplidar_debug.config"/>
 
  <arg name="interpreter_extra_args"
       default=""
       doc="Additional args for the pointcloud2 interpreter"
       />
  
  <arg name="interpreter_name"
       default="interpreter"
       doc="Additional args for the laserscan interpreter"
       />
  
  <arg name="frame_broadcaster_extra_args"
       default=""
       doc="Additional args for the frame broadcaster"
       />

  <node pkg="rviz" 
        type="rviz" 
        name="rviz" 
        args="--display-config /home/andreas/.rviz/rplidar_laserscan.rviz"
        required="true"
        />

  <include file="$(find rplidar_ros)/launch/rplidar.launch">
  </include>
  
  <node pkg="unicorn_sensor_interpreter"
      type="unicorn_laserscan_interpreter_node"
      name="$(arg interpreter_name)"
      args="--print_all_options
            --subscribe_topic /scan
            --publish_ema
            --publish_objects_closest_point_markers
            --publish_objects_velocity_arrows
            --publish_objects_delta_position_lines
            --nr_scans_in_bank 10
            --object_threshold_min_speed 0.04
            --object_threshold_max_distance 6.5
            --object_threshold_min_nr_points 4
            --object_threshold_min_confidence 0
            --object_threshold_edge_max_delta_range 0.15
            $(arg interpreter_extra_args)"
      />
  

  <node pkg="unicorn_sensor_interpreter"
        type="moa_receiver_node"
        name="moa_receiver"
        />
  
  <node pkg="unicorn_sensor_interpreter"
        type="rplidar_frame_broadcaster_node"
        name="frame_broadcaster" 
        args="$(arg frame_broadcaster_extra_args)"
        />
  
  <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=/scan $(find leg_detector)/config/trained_leg_detector.yaml" output="screen">
    <param name="fixed_frame" type="string" value="odom" />
  </node>
 
<!--  <node pkg="leg_detector" type="leg_detector" name="leg_detector">
    <remap from="camera" to="camera" />
    <remap from="rgb_ns" to="color" />
    <remap from="depth_ns" to="depth" />
    <remap from="image_topic" to="image_raw" />
    <remap from="depth_topic" to="image_rect_raw" />
    <param name="fixed_frame" type="string" value="camera_link" />
    
    <param name="classifier_name" type="string" value="frontalface" />
    <rosparam command="load" file="$(find face_detector)/param/classifier.yaml" />
    <param name="classifier_reliability" type="double" value="0.9" />
    <param name="do_continuous" type="bool" value="true" />
    <param name="do_publish_faces_of_unknown_size" type="bool" value="false" />
    <param name="do_display" type="bool" value="false" />
    <param name="use_rgbd" type="bool" value="true" />
    <param name="approximate_sync" type="bool" value="true" />
  </node>-->
  
  
  
</launch>
